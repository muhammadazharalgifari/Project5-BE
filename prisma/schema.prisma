// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
  id            Int           @id @default(autoincrement())
  username      String
  email         String        @unique
  password      String
  imageProfile  String
  role          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  products      products[]
  cart          carts[]
  transaction   transactions[]
}

model categories {
  id            Int           @id @default(autoincrement())
  name          String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  products      products[]
}

model products {
  id            Int           @id @default(autoincrement())
  name          String
  price         Int
  description   String
  imageProduct  String
  stock         Int           @default(0)
  userId        Int
  categoryId    Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  user          users         @relation(fields: [userId],references: [id])
  category      categories?   @relation(fields: [categoryId],references: [id])

  cartItem      cartItems[]
  transaction   transactions[]
}

model carts {
  id          Int      @id @default(autoincrement())
  user_id     Int
  total_price Decimal
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user users   @relation(fields: [user_id], references: [id])

  cartItem   cartItems[]
  transaction transactions[]
}

model cartItems {
  id            Int           @id @default(autoincrement())
  cartId        Int
  productId     Int
  quantity      Int           @default(1)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  product       products      @relation(fields: [productId], references: [id])
  cart          carts         @relation(fields: [cartId], references: [id])
}

model transactions {
  id             Int          @id @default(autoincrement())
  productId      Int
  cartId         Int
  userId         Int
  amount         Int
  status         String
  paymentUrl     String?
  createdAt      DateTime
  updatedAt      DateTime

  product        products     @relation(fields: [productId], references: [id])
  cart           carts        @relation(fields: [cartId], references: [id])
  user           users        @relation(fields: [userId], references: [id])
}
